export declare const Events: {
    /**
     * Emitted when a guild member levels up
     * @param {GuildMember} member The Guildmember that leveled up.
     * @param {number} level The level they advanced to.
     */
    readonly GuildMemberLevelUp: "guildMemberLevelUp";
    readonly ApplicationCommandPermissionsUpdate: import("discord.js").Events.ApplicationCommandPermissionsUpdate;
    readonly AutoModerationActionExecution: import("discord.js").Events.AutoModerationActionExecution;
    readonly AutoModerationRuleCreate: import("discord.js").Events.AutoModerationRuleCreate;
    readonly AutoModerationRuleDelete: import("discord.js").Events.AutoModerationRuleDelete;
    readonly AutoModerationRuleUpdate: import("discord.js").Events.AutoModerationRuleUpdate;
    readonly CacheSweep: import("discord.js").Events.CacheSweep;
    readonly ChannelCreate: import("discord.js").Events.ChannelCreate;
    readonly ChannelDelete: import("discord.js").Events.ChannelDelete;
    readonly ChannelPinsUpdate: import("discord.js").Events.ChannelPinsUpdate;
    readonly ChannelUpdate: import("discord.js").Events.ChannelUpdate;
    readonly ClientReady: import("discord.js").Events.ClientReady;
    readonly Debug: import("discord.js").Events.Debug;
    readonly Error: import("discord.js").Events.Error;
    readonly GuildAuditLogEntryCreate: import("discord.js").Events.GuildAuditLogEntryCreate;
    readonly GuildAvailable: import("discord.js").Events.GuildAvailable;
    readonly GuildBanAdd: import("discord.js").Events.GuildBanAdd;
    readonly GuildBanRemove: import("discord.js").Events.GuildBanRemove;
    readonly GuildCreate: import("discord.js").Events.GuildCreate;
    readonly GuildDelete: import("discord.js").Events.GuildDelete;
    readonly GuildEmojiCreate: import("discord.js").Events.GuildEmojiCreate;
    readonly GuildEmojiDelete: import("discord.js").Events.GuildEmojiDelete;
    readonly GuildEmojiUpdate: import("discord.js").Events.GuildEmojiUpdate;
    readonly GuildIntegrationsUpdate: import("discord.js").Events.GuildIntegrationsUpdate;
    readonly GuildMemberAdd: import("discord.js").Events.GuildMemberAdd;
    readonly GuildMemberAvailable: import("discord.js").Events.GuildMemberAvailable;
    readonly GuildMemberRemove: import("discord.js").Events.GuildMemberRemove;
    readonly GuildMembersChunk: import("discord.js").Events.GuildMembersChunk;
    readonly GuildMemberUpdate: import("discord.js").Events.GuildMemberUpdate;
    readonly GuildRoleCreate: import("discord.js").Events.GuildRoleCreate;
    readonly GuildRoleDelete: import("discord.js").Events.GuildRoleDelete;
    readonly GuildRoleUpdate: import("discord.js").Events.GuildRoleUpdate;
    readonly GuildScheduledEventCreate: import("discord.js").Events.GuildScheduledEventCreate;
    readonly GuildScheduledEventDelete: import("discord.js").Events.GuildScheduledEventDelete;
    readonly GuildScheduledEventUpdate: import("discord.js").Events.GuildScheduledEventUpdate;
    readonly GuildScheduledEventUserAdd: import("discord.js").Events.GuildScheduledEventUserAdd;
    readonly GuildScheduledEventUserRemove: import("discord.js").Events.GuildScheduledEventUserRemove;
    readonly GuildStickerCreate: import("discord.js").Events.GuildStickerCreate;
    readonly GuildStickerDelete: import("discord.js").Events.GuildStickerDelete;
    readonly GuildStickerUpdate: import("discord.js").Events.GuildStickerUpdate;
    readonly GuildUnavailable: import("discord.js").Events.GuildUnavailable;
    readonly GuildUpdate: import("discord.js").Events.GuildUpdate;
    readonly InteractionCreate: import("discord.js").Events.InteractionCreate;
    readonly Invalidated: import("discord.js").Events.Invalidated;
    readonly InviteCreate: import("discord.js").Events.InviteCreate;
    readonly InviteDelete: import("discord.js").Events.InviteDelete;
    readonly MessageBulkDelete: import("discord.js").Events.MessageBulkDelete;
    readonly MessageCreate: import("discord.js").Events.MessageCreate;
    readonly MessageDelete: import("discord.js").Events.MessageDelete;
    readonly MessageReactionAdd: import("discord.js").Events.MessageReactionAdd;
    readonly MessageReactionRemove: import("discord.js").Events.MessageReactionRemove;
    readonly MessageReactionRemoveAll: import("discord.js").Events.MessageReactionRemoveAll;
    readonly MessageReactionRemoveEmoji: import("discord.js").Events.MessageReactionRemoveEmoji;
    readonly MessageUpdate: import("discord.js").Events.MessageUpdate;
    readonly PresenceUpdate: import("discord.js").Events.PresenceUpdate;
    readonly Raw: import("discord.js").Events.Raw;
    readonly ShardDisconnect: import("discord.js").Events.ShardDisconnect;
    readonly ShardError: import("discord.js").Events.ShardError;
    readonly ShardReady: import("discord.js").Events.ShardReady;
    readonly ShardReconnecting: import("discord.js").Events.ShardReconnecting;
    readonly ShardResume: import("discord.js").Events.ShardResume;
    readonly StageInstanceCreate: import("discord.js").Events.StageInstanceCreate;
    readonly StageInstanceDelete: import("discord.js").Events.StageInstanceDelete;
    readonly StageInstanceUpdate: import("discord.js").Events.StageInstanceUpdate;
    readonly ThreadCreate: import("discord.js").Events.ThreadCreate;
    readonly ThreadDelete: import("discord.js").Events.ThreadDelete;
    readonly ThreadListSync: import("discord.js").Events.ThreadListSync;
    readonly ThreadMembersUpdate: import("discord.js").Events.ThreadMembersUpdate;
    readonly ThreadMemberUpdate: import("discord.js").Events.ThreadMemberUpdate;
    readonly ThreadUpdate: import("discord.js").Events.ThreadUpdate;
    readonly TypingStart: import("discord.js").Events.TypingStart;
    readonly UserUpdate: import("discord.js").Events.UserUpdate;
    readonly VoiceServerUpdate: import("discord.js").Events.VoiceServerUpdate;
    readonly VoiceStateUpdate: import("discord.js").Events.VoiceStateUpdate;
    readonly Warn: import("discord.js").Events.Warn;
    readonly WebhooksUpdate: import("discord.js").Events.WebhooksUpdate;
    readonly PreMessageParsed: "preMessageParsed";
    readonly MentionPrefixOnly: "mentionPrefixOnly";
    readonly NonPrefixedMessage: "nonPrefixedMessage";
    readonly PrefixedMessage: "prefixedMessage";
    readonly UnknownMessageCommandName: "unknownMessageCommandName";
    readonly UnknownMessageCommand: "unknownMessageCommand";
    readonly CommandDoesNotHaveMessageCommandHandler: "commandDoesNotHaveMessageCommandHandler";
    readonly PreMessageCommandRun: "preMessageCommandRun";
    readonly MessageCommandDenied: "messageCommandDenied";
    readonly MessageCommandAccepted: "messageCommandAccepted";
    readonly MessageCommandRun: "messageCommandRun";
    readonly MessageCommandSuccess: "messageCommandSuccess";
    readonly MessageCommandError: "messageCommandError";
    readonly MessageCommandFinish: "messageCommandFinish";
    readonly MessageCommandTypingError: "messageCommandTypingError";
    readonly ListenerError: "listenerError";
    readonly CommandApplicationCommandRegistryError: "commandApplicationCommandRegistryError";
    readonly ApplicationCommandRegistriesInitialising: "applicationCommandRegistriesInitialising";
    readonly ApplicationCommandRegistriesRegistered: "applicationCommandRegistriesRegistered";
    readonly ApplicationCommandRegistriesBulkOverwriteError: "applicationCommandRegistriesBulkOverwriteError";
    readonly PiecePostLoad: "piecePostLoad";
    readonly PieceUnload: "pieceUnload";
    readonly PluginLoaded: "pluginLoaded";
    readonly InteractionHandlerParseSuccess: "interactionHandlerParseSuccess";
    readonly InteractionHandlerParseSome: "interactionHandlerParseSome";
    readonly InteractionHandlerParseNone: "interactionHandlerParseNone";
    readonly InteractionHandlerParseError: "interactionHandlerParseError";
    readonly InteractionHandlerError: "interactionHandlerError";
    readonly PossibleAutocompleteInteraction: "possibleAutocompleteInteraction";
    readonly CommandAutocompleteInteractionSuccess: "commandAutocompleteInteractionSuccess";
    readonly CommandAutocompleteInteractionError: "commandAutocompleteInteractionError";
    readonly PossibleChatInputCommand: "possibleChatInputCommand";
    readonly UnknownChatInputCommand: "unknownChatInputCommand";
    readonly CommandDoesNotHaveChatInputCommandHandler: "commandDoesNotHaveChatInputCommandHandler";
    readonly PreChatInputCommandRun: "preChatInputCommandRun";
    readonly ChatInputCommandDenied: "chatInputCommandDenied";
    readonly ChatInputCommandAccepted: "chatInputCommandAccepted";
    readonly ChatInputCommandRun: "chatInputCommandRun";
    readonly ChatInputCommandSuccess: "chatInputCommandSuccess";
    readonly ChatInputCommandError: "chatInputCommandError";
    readonly ChatInputCommandFinish: "chatInputCommandFinish";
    readonly PossibleContextMenuCommand: "possibleContextMenuCommand";
    readonly UnknownContextMenuCommand: "unknownContextMenuCommand";
    readonly CommandDoesNotHaveContextMenuCommandHandler: "commandDoesNotHaveContextMenuCommandHandler";
    readonly PreContextMenuCommandRun: "preContextMenuCommandRun";
    readonly ContextMenuCommandDenied: "contextMenuCommandDenied";
    readonly ContextMenuCommandAccepted: "contextMenuCommandAccepted";
    readonly ContextMenuCommandRun: "contextMenuCommandRun";
    readonly ContextMenuCommandSuccess: "contextMenuCommandSuccess";
    readonly ContextMenuCommandError: "contextMenuCommandError";
    readonly ContextMenuCommandFinish: "contextMenuCommandFinish";
};
//# sourceMappingURL=events.d.ts.map